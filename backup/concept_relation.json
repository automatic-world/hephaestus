[{"_key":"148275","_id":"concept_relation/148275","_from":"concepts/graph-model__neo4j_graph-model","_to":"concepts/graph-model__arangodb_graph-model","_rev":"_j0vf8jS---","relation_type":"correspond_to","relation_category":"mapping","justification":"Both systems support a graph structure centered on nodes and relationships.","justification_kor":"두 시스템 모두 노드와 관계를 핵심으로 하는 그래프 구조를 지원함"},{"_key":"148277","_id":"concept_relation/148277","_from":"concepts/graph-model","_to":"concepts/graph-model__neo4j_graph-model","_rev":"_j0vf8jS--_","relation_type":"implements","relation_category":"hierarchy","justification":"Neo4j's graph model is an abstract concept, concretely implemented as a node-relationship structure.","justification_kor":"Neo4j의 그래프 모델은 추상 개념으로, 노드-관계 구조를 구체적으로 구현"},{"_key":"148279","_id":"concept_relation/148279","_from":"concepts/graph-model","_to":"concepts/graph-model__arangodb_graph-model","_rev":"_j0vf8jS--A","relation_type":"implements","relation_category":"hierarchy","justification":"ArangoDB's graph model also represents graph data using a concrete model of nodes and edges.","justification_kor":"ArangoDB의 그래프 모델 역시 노드와 엣지로 그래프 데이터를 표현하는 구체적 모델"},{"_key":"148287","_id":"concept_relation/148287","_from":"concepts/node__neo4j_node","_to":"concepts/node__arangodb_node","_rev":"_j0vf8jS--B","relation_type":"correspond_to","relation_category":"mapping","justification":"Both systems provide the concept of individual objects within the graph.","justification_kor":"두 시스템 모두 그래프 내 개별 객체를 나타내는 개념을 제공함"},{"_key":"148289","_id":"concept_relation/148289","_from":"concepts/node","_to":"concepts/node__neo4j_node","_rev":"_j0vf8jS--C","relation_type":"implements","relation_category":"hierarchy","justification":"Neo4j's Node is an abstract concept, implemented as a concrete node.","justification_kor":"Neo4j의 Node는 추상 개념으로, 구체적 노드 구현"},{"_key":"148291","_id":"concept_relation/148291","_from":"concepts/node","_to":"concepts/node__arangodb_node","_rev":"_j0vf8jS--D","relation_type":"implements","relation_category":"hierarchy","justification":"ArangoDB's Node is also a concrete concept representing individual data entities in a graph.","justification_kor":"ArangoDB의 Node 역시 그래프의 개별 데이터 엔티티를 나타내는 구체적 개념"},{"_key":"148299","_id":"concept_relation/148299","_from":"concepts/relationship__neo4j_relationship","_to":"concepts/relationship__arangodb_edge","_rev":"_j0vf8jS--E","relation_type":"correspond_to","relation_category":"mapping","justification":"Neo4j's Relationship and ArangoDB's Edge correspond as concepts representing connections within the graph.","justification_kor":"Neo4j의 Relationship와 ArangoDB의 Edge는 그래프 내 연결 구조를 나타내는 개념으로 대응됨"},{"_key":"148301","_id":"concept_relation/148301","_from":"concepts/relationship","_to":"concepts/relationship__neo4j_relationship","_rev":"_j0vf8jW---","relation_type":"implements","relation_category":"hierarchy","justification":"Neo4j's Relationship is an abstract concept, implemented as a concrete edge.","justification_kor":"Neo4j의 Relationship은 추상 개념으로, 구체적 엣지 구현"},{"_key":"148303","_id":"concept_relation/148303","_from":"concepts/relationship","_to":"concepts/relationship__arangodb_edge","_rev":"_j0vf8jW--_","relation_type":"implements","relation_category":"hierarchy","justification":"ArangoDB's Edge is also a concrete structure representing connections between nodes.","justification_kor":"ArangoDB의 Edge 역시 노드 간 연결을 나타내는 구체적 구조"},{"_key":"148311","_id":"concept_relation/148311","_from":"concepts/property__neo4j_property","_to":"concepts/property__arangodb_attribute","_rev":"_j0vf8jW--A","relation_type":"correspond_to","relation_category":"mapping","justification":"As attributes added to nodes or relationships, they correspond to ArangoDB's Attributes.","justification_kor":"노드나 관계에 부가하는 속성으로서, ArangoDB의 Attribute와 대응됨"},{"_key":"148313","_id":"concept_relation/148313","_from":"concepts/property","_to":"concepts/property__neo4j_property","_rev":"_j0vf8jW--B","relation_type":"implements","relation_category":"hierarchy","justification":"Neo4j's Property is an abstract concept of attributes, implemented as concrete properties.","justification_kor":"Neo4j의 Property는 추상적 속성 개념으로 구체적 속성 구현"},{"_key":"148315","_id":"concept_relation/148315","_from":"concepts/property","_to":"concepts/property__arangodb_attribute","_rev":"_j0vf8jW--C","relation_type":"implements","relation_category":"hierarchy","justification":"ArangoDB's Attribute is also an attribute added to documents or graph elements.","justification_kor":"ArangoDB의 Attribute 역시 문서 또는 그래프 요소에 부가하는 속성"},{"_key":"148323","_id":"concept_relation/148323","_from":"concepts/query-language__neo4j_query-language","_to":"concepts/query-language__arangodb_query-language","_rev":"_j0vf8jW--D","relation_type":"correspond_to","relation_category":"mapping","justification":"Both provide languages to query data within the database, though their names and syntax differ.","justification_kor":"둘 다 데이터베이스 내 데이터를 질의하는 언어를 제공하며 이름과 문법이 다름"},{"_key":"148325","_id":"concept_relation/148325","_from":"concepts/query-language","_to":"concepts/query-language__neo4j_query-language","_rev":"_j0vf8jW--E","relation_type":"implements","relation_category":"hierarchy","justification":"Neo4j's Query Language is an abstract concept, concretely implemented as Cypher.","justification_kor":"Neo4j의 Query Language는 추상 개념으로, Cypher와 같은 구체적 구현"},{"_key":"148327","_id":"concept_relation/148327","_from":"concepts/query-language","_to":"concepts/query-language__arangodb_query-language","_rev":"_j0vf8jW--F","relation_type":"implements","relation_category":"hierarchy","justification":"ArangoDB's Query Language is concretely realized as AQL.","justification_kor":"ArangoDB의 Query Language는 AQL로 구체화된 언어"}]